* {
  box-sizing: border-box;
}

html {
  height: 100vh;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  font-family: system-ui;
  color: #10214e;
}

.bold {
  font-weight: bold;
}

article {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  width: 50vw;
  max-width: 25em;
  min-width: 20em;
  border-radius: 1rem;
  
  box-shadow: 0 0 20px 20px rgba(0,0,0,.1);
  transition: .25s;
}

.container {
  display: flex;
  flex-direction: column;
  width: 100%;
}

header {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  justify-content: flex-end;
}

h1 {
  margin-top: 0;
  color: black;
  font-size: 3em;
  margin-bottom: 0.5em;
}

button {
  position: absolute;
  right: 1rem;
  top: 1rem;
  width: 2.5rem;
  height: 2.5rem;
  padding: .25rem;
  border: none;
  border-radius: 50%;
  background: gray;
  transform: scale(.8);
  transition: .25s;
}
button:focus {
  outline: none;
  background: gray;
}
button:focus svg {
  stroke: rgba(0,239,255,1);
}

svg {
  position: absolute;
  top: calc(1.25rem - 12px);
  left: calc(1.25rem - 12px);
  stroke: #4e54c8;
  transition-delay: .25s;
}
button svg:nth-of-type(2) {
  opacity: 0;
  transition-delay: 0ms;
}

.foto {
  background-image: url(../assets/profiel-foto.jpg);
    width: 85%;
    min-height: 35vh;
    height: 35vh;
    border-radius: 1em;
    margin: 2rem;
    /* box-shadow: 0 0 2px 2px rgba(0,0,0,.2); */
    transition: .25s .15s;
    /* margin-top: 5em; */
    background-size: cover;
    background-position: center;
    padding: 10em;
}

dl {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-areas:
    "html-dd css-dd js-dd"
    "html-dt css-dt js-dt"
    ;
  justify-items: center;
  align-items: start;
  width: 100%;
  /* margin-top: -3rem; */
  margin-bottom: 0;
  padding: 2rem 0 3rem;
  text-align: center;
  /* background: rgb(255,255,255); */
}

dt {
  margin-top: .25rem;
  padding-top: .25rem;
  font-weight: bold;
}
dt:nth-of-type(1) {
  grid-area: html-dt;
}
dt:nth-of-type(2) {
  grid-area: css-dt;
  transform: translateY(1rem);
}
dt:nth-of-type(3) {
  grid-area: js-dt;
}

dd {
  margin: 0;
  padding-left: .3rem;
  transition: .25s .3s;
}
dd:nth-of-type(2){  
  transform: translateY(1rem);
}

p { 
  margin: 0;
}

.hover {
  width: 100%;
  padding: 0.5rem 0rem;
  border-radius: 0 0 1rem 1rem;
  text-align: center;
  color: white;
  font-family: 'Oswald', sans-serif;
  font-size: 3em;
}

.card-below {
  background-color: black;
  border-radius: 0 0 1rem 1rem;
}

/* expand content */
body.expand {
  font-size: 1.15em;
}

body.expand article {
  width: 60vw;
  max-width: 60vw;
}

body.expand .foto {
  width: 30%;
}

body.expand button svg:first-of-type {
  opacity: 0;
  transition-delay: 0ms;
}

body.expand button svg:nth-of-type(2) {
  opacity: 1;
  transition-delay: .25s;
}

body.expand dd {
  font-size: 1.75em;
}

body.expand img {
  width: 15em;
}

.info {
  height: 0;
  opacity: 0;
  transition: opacity 1s ease, height 1.5s ease;
  margin-left: 2em;
  margin-right: 2em;
}

.info-tekst {
  font-size: 0.7em;
}

.about-tekst {
  margin-bottom: 2em;
}

.icons {
  display: flex;
}

.icon1 {
  margin-right: 2em;
  margin-bottom: 2em;
  width: 2em;
}

.icon2 {
  width: 2em;
}


.container:hover .hover {
  background-color: black;
  color: black;
  padding: 0;
  font-size: 2em;
  opacity: 0;
}

.container:hover .info {
  opacity: 1;
  height: 100%;
  animation: none;
} 

@keyframes fadeIn {
  0% {
    opacity: 0;
    height: 0;
  }
  100% {
    opacity: 1;
    height: 100%;
  }
}

.hidden {
   /* Voeg een animatie toe aan de overgang */
}

.wave {
  animation-name: wave-animation;
  animation-duration: 2.5s;       
  animation-iteration-count: infinite; 
  transform-origin: 55% 70%;      
  display: inline-block;
}

@keyframes wave-animation {
    0% { transform: rotate( 0.0deg) }
   10% { transform: rotate(14.0deg) } 
   20% { transform: rotate(-8.0deg) }
   30% { transform: rotate(14.0deg) }
   40% { transform: rotate(-4.0deg) }
   50% { transform: rotate(10.0deg) }
   60% { transform: rotate( 0.0deg) }
  100% { transform: rotate( 0.0deg) }
}



